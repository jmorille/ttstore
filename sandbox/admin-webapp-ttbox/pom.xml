<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>eu.ttbox.serveur</groupId>
    <artifactId>serveur-ttbox</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>admin-webapp-ttbox</artifactId>
  <packaging>war</packaging>

  <name>[GWT] TTBox Admin - Webapp</name>

  <properties>
    <gwt.module.name>eu.ttbox.server.admin.AdminTTBox</gwt.module.name>
    <!-- Convenience property to set the GWT version -->
    <gwtVersion>2.4.0</gwtVersion>
    <gwt-maven-plugin.version>2.4.0</gwt-maven-plugin.version>
    <validation-api.version>1.0.0.GA</validation-api.version>
    <!-- GWT needs at least java 1.5 -->
    <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>eu.ttbox.bom</groupId>
        <artifactId>bom-ttbox</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>eu.ttbox.composant</groupId>
      <artifactId>logging-comp</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
    </dependency>

    <!-- Serveur -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>eu.ttbox.serveur</groupId>
      <artifactId>domain-ttbox</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Pool DB -->
    <dependency>
      <groupId>org.apache.juli</groupId>
      <artifactId>tomcat-juli-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>jdbc-pool</artifactId>
    </dependency>

    <!-- JDBC Drivers -->
    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>

    <!-- GWT -->
    <!-- <dependency> -->
    <!-- <groupId>com.google.gwt</groupId> -->
    <!-- <artifactId>gwt-servlet</artifactId> -->
    <!-- <version>${gwtVersion}</version> -->
    <!-- <scope>runtime</scope> -->
    <!-- </dependency> -->
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>${gwtVersion}</version>
      <scope>provided</scope>
    </dependency>
    <!-- GWT projects do not usually need a dependency on gwt-dev, but MobileWebApp contains a GWTC Linker (AppCacheLinker) which in turn depends on internals of the GWT compiler. -->
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-dev</artifactId>
      <version>${gwtVersion}</version>
      <scope>provided</scope><!-- "provided" so that we don't deploy -->
    </dependency>

    <!-- RequestFactory server : http://googlewebtoolkit.blogspot.com/2011/09/working-with-maven-and-requestfactory.html -->
    <dependency>
      <groupId>com.google.web.bindery</groupId>
      <artifactId>requestfactory-server</artifactId>
      <version>${gwtVersion}</version>
    </dependency>
    <!-- Generate the decoder needed by RequestFactory Server -->
    <!-- Doesn't yet work in eclipse. See maven-processor-plugin below. -->
    <!-- <dependency> -->
    <!-- <groupId>com.google.web.bindery</groupId> -->
    <!-- <artifactId>requestfactory-apt</artifactId> -->
    <!-- <version>${gwtVersion}</version> -->
    <!-- </dependency> -->

    <!-- Validation -->
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${validation-api.version}</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${validation-api.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>

    <!-- GWT Tools lib -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava-gwt</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.gwt.inject</groupId>
      <artifactId>gin</artifactId>
      <version>1.5.0</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.gwt</groupId>
          <artifactId>gwt-servlet</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

  </dependencies>

  <build>
    <!-- Generate compiled stuff in the folder used for developing mode -->
    <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <!-- <includes> -->
        <!-- <include>**/*.*</include> -->
        <!-- </includes> -->
      </resource>
      <resource>
        <directory>src/main/java</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>

    <plugins>
      <!-- requestfactory-apt runs an annotation processor (APT) to instrument its service interfaces so that RequestFactoryServer can decode client requests. Normally you would just have a dependency 
        on requestfactory-apt with <scope>provided</scope>, but that won't work in eclipse due to m2e bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=335036 -->
      <plugin>
        <groupId>org.bsc.maven</groupId>
        <artifactId>maven-processor-plugin</artifactId>
        <version>2.0.5</version>
        <executions>
          <execution>
            <id>process</id>
            <goals>
              <goal>process</goal>
            </goals>
            <phase>generate-sources</phase>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.google.web.bindery</groupId>
            <artifactId>requestfactory-apt</artifactId>
            <version>${gwtVersion}</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- Google Plugin for Eclipse (GPE) won't see the source generated above by requestfactory-apt unless it is exposed as an additional source dir -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/apt</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- GWT Maven Plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>${gwt-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <!-- <goal>generateAsync</goal> -->
              <goal>i18n</goal>
              <goal>compile</goal>
              <!-- <goal>test</goal> -->
            </goals>
          </execution>
        </executions>
        <!-- Plugin configuration. There are many available options, see gwt-maven-plugin documentation at codehaus.org -->
        <configuration>
          <runTarget>AdminTTBox.html</runTarget>
          <hostedWebapp>${webappDirectory}</hostedWebapp>
          <module>${gwt.module.name}</module>
          <i18nMessagesBundle>eu.ttbox.server.admin.client.Messages</i18nMessagesBundle>
          <!-- Compilation -->
          <extraJvmArgs>-Xmx1024M</extraJvmArgs>
          <draftCompile>true</draftCompile>
        </configuration>
      </plugin>

      <!-- Copy static web files before executing gwt:run -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>exploded</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <webappDirectory>${webappDirectory}</webappDirectory>
        </configuration>
      </plugin>

      <!-- Eclipse -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.8</version>
        <!-- Note 2.8 does not work with AspectJ aspect path -->
        <configuration>
          <downloadSources>true</downloadSources>
          <downloadJavadocs>false</downloadJavadocs>
          <wtpversion>2.0</wtpversion>
          <classpathContainers>
            <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
            <classpathContainer>com.google.gwt.eclipse.core.GWT_CONTAINER</classpathContainer>
          </classpathContainers>

          <!-- On exclut les bibliothÃ¨ques GWT car elle font doublon avec le GWT_CONTAINER -->
          <excludes>
            <exclude>com.google.gwt:gwt-user</exclude>
            <exclude>com.google.gwt:gwt-dev</exclude>
          </excludes>

          <additionalBuildcommands>
            <buildCommand>
              <name>org.eclipse.ajdt.core.ajbuilder</name>
              <arguments>
                <aspectPath>org.springframework.aspects</aspectPath>
              </arguments>
            </buildCommand>
            <buildCommand>
              <name>org.springframework.ide.eclipse.core.springbuilder</name>
            </buildCommand>
            <buildCommand>
              <name>com.google.gwt.eclipse.core.gwtProjectValidator</name>
            </buildCommand>
          </additionalBuildcommands>
          <additionalProjectnatures>
            <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
            <projectnature>com.google.gwt.eclipse.core.gwtNature</projectnature>
          </additionalProjectnatures>
          <!-- <additionalConfig> -->
          <!-- <file> -->
          <!-- <name>.settings/com.google.gdt.eclipse.core.prefs</name> -->
          <!-- <content> -->
          <!-- <![CDATA[ -->
          <!-- eclipse.preferences.version=1 -->
          <!-- jarsExcludedFromWebInfLib= -->
          <!-- lastWarOutDir=target/webdev -->
          <!-- warSrcDir=src/main/webapp -->
          <!-- warSrcDirIsOutput=false -->
          <!-- ]]> -->
          <!-- </content> -->
          <!-- </file> -->

          <!-- <file> -->
          <!-- <name> -->
          <!-- .settings/org.eclipse.wst.common.project.facet.core.xml -->
          <!-- </name> -->
          <!-- <content> -->
          <!-- <![CDATA[ -->
          <!-- <?xml version="1.0" encoding="UTF-8"?> -->
          <!-- <faceted-project> -->
          <!-- <fixed facet="jst.java"/> -->
          <!-- <fixed facet="jst.web"/> -->
          <!-- <installed facet="jst.java" version="6.0"/> -->
          <!-- <installed facet="jst.web" version="2.5"/> -->
          <!-- </faceted-project> -->
          <!-- ]]> -->
          <!-- </content> -->
          <!-- </file> -->
          <!-- </additionalConfig> -->
        </configuration>
      </plugin>

      <!-- Path Eclipse Config -->
      <!-- mvn replacer:replace -->
      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>maven-replacer-plugin</artifactId>
        <version>1.4.0</version>
        <!-- <executions> -->
        <!-- <execution> -->
        <!-- <phase>clean</phase> -->
        <!-- <goals> -->
        <!-- <goal>replace</goal> -->
        <!-- </goals> -->
        <!-- </execution> -->
        <!-- </executions> -->
        <configuration>
          <ignoreMissingFile>true</ignoreMissingFile>
          <file>.classpath</file>
          <regex>false</regex>
          <replacements>
            <replacement>
              <xpath>/classpath/classpathentry[@path='src/main/resources' and
                @kind='src' and @excluding='**']/@excluding</xpath>
              <token>**</token>
              <value></value>
            </replacement>
          </replacements>
        </configuration>
      </plugin>

    </plugins>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <versionRange>[2.1.1,)</versionRange>
                    <goals>
                      <goal>exploded</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.bsc.maven</groupId>
                    <artifactId>maven-processor-plugin</artifactId>
                    <versionRange>[2.0.5,)</versionRange>
                    <goals>
                      <goal>process</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
                <!-- <pluginExecution> -->
                <!-- <pluginExecutionFilter> -->
                <!-- <groupId>org.codehaus.mojo</groupId> -->
                <!-- <artifactId>build-helper-maven-plugin</artifactId> -->
                <!-- <versionRange>[1.7,)</versionRange> -->
                <!-- <goals> -->
                <!-- <goal>add-source</goal> -->
                <!-- </goals> -->
                <!-- </pluginExecutionFilter> -->
                <!-- <action> -->
                <!-- <ignore></ignore> -->
                <!-- </action> -->
                <!-- </pluginExecution> -->
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
