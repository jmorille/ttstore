<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         xmlns:product="eu.ttbox.view.admin.product.*">

    <fx:Metadata>
        [Name]
    </fx:Metadata>

    <s:layout>
        <s:VerticalLayout horizontalAlign="center"/>
    </s:layout>
    <fx:Script>
        <![CDATA[
            import eu.ttbox.event.admin.product.ProductEvent;
        ]]>
    </fx:Script>

    <fx:Script>
        <![CDATA[
            import eu.ttbox.controler.core.I18nManager;
            import eu.ttbox.model.user.User;
            import mx.events.ListEvent;
            import eu.ttbox.model.product.Product;
            import eu.ttbox.controler.admin.product.ProductControler;

            import mx.collections.ArrayList;
            import mx.collections.ListCollectionView;

            [Bindable]
            public var msg:I18nManager=I18nManager.getInstance();

            [Inject]
            [Bindable]
            private var productControler:ProductControler;

            [Bindable]
            [In("#{productControler.productList}")]
            public var productList:ListCollectionView;

            [Bindable]
            public var product:Product;

            public function selectItemClick(event:ListEvent):void {
                var selectProduct:Product=(event.currentTarget as DataGrid).selectedItem as Product;
                productEditForm.product=selectProduct;
            }

            public function editProduct():void {
                product=productListGrid.selectedItem as Product;
                if (product != null) {
                    this.currentState="productEdit";
                }
            }
        ]]>
    </fx:Script>
    <s:states>
        <s:State name="productList"/>
        <s:State name="productEdit"/>
    </s:states>
    <fx:Declarations>
        <!-- Placer ici les éléments non visuels (services et objets de valeur, par exemple). -->
    </fx:Declarations>

    <s:VGroup includeIn="productList"
              width="100%"
              height="100%">

        <s:HGroup>
            <s:Button label="{msg.refresh}"
                      click="{dispatchEvent(new ProductEvent(ProductEvent.REFRESH_SEARCH_LIST));}"/>
            <s:Button label="{msg.create}"
                      click="{productEditForm.initNewProduct()}"/>
            <s:Button label="{msg.edit}"
                      click="{editProduct()}"/>


        </s:HGroup>

        <s:DataGrid id="productListGrid"
                    dataProvider="{productList}"
                    width="100%"
                    height="100%">
            <s:columns>
                <s:ArrayList>
                    <s:GridColumn dataField="id"/>
                    <s:GridColumn dataField="name"
                                  headerText="{msg.name}"/>
                </s:ArrayList>
            </s:columns>
        </s:DataGrid>

    </s:VGroup>


    <product:ProductEditForm id="productEditForm"
                             product="{product}"
                             includeIn="productEdit"/>

</s:Group>
