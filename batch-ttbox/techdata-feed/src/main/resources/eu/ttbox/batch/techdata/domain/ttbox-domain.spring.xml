<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
  default-lazy-init="true">




  <bean id="ttboxSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="ttboxDS" />
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">${ttbox.hibernate.dialect}</prop>
        <prop key="hibernate.hbm2ddl.auto">${ttbox.hibernate.hbm2ddl.auto}</prop>
        <prop key="hibernate.show_sql">${ttbox.hibernate.show_sql}</prop>
        <prop key="hibernate.format_sql">${ttbox.hibernate.format_sql}</prop>
        <prop key="hibernate.generate_statistics">${ttbox.hibernate.generate_statistics}</prop>
        <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate3.SpringSessionContext</prop>
        <!-- <prop key="hibernate.current_session_context_class">org.hibernate.context.ThreadLocalSessionContext</prop> -->

        <!-- Optimize -->
        <prop key="hibernate.id.new_generator_mappings">true</prop>
        <prop key="hibernate.jdbc.batch_size">30</prop>
        <prop key="hibernate.order_updates">true</prop>
        <prop key="hibernate.jdbc.batch_versioned_data">true</prop>
        <prop key="hibernate.jdbc.use_scrollable_resultset">true</prop>
        <prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
        <prop key="hibernate.jdbc.use_get_generated_keys">true</prop>


        <!-- Cache -->
        <!-- prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop -->
        <prop key="hibernate.cache.use_second_level_cache">${ttbox.hibernate.cache.use_second_level_cache}</prop>
        <prop key="hibernate.cache.use_query_cache">${ttbox.hibernate.cache.use_query_cache}</prop>
        <prop key="net.sf.ehcache.configurationResourceName">/ehcache.xml</prop>
      </props>
    </property>
    <property name="packagesToScan">
      <list>
        <value>eu.ttbox.model</value>
      </list>
    </property>
    <!-- <property name="entityInterceptor" ref="auditInterceptor" /> -->

  </bean>

  <!-- Interceptor for hibernate calls to be able to create and close sessions -->
  <bean id="ttboxHibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
    <property name="sessionFactory" ref="ttboxSessionFactory" />
  </bean>

  <!-- p:hibernateManagedSession="true" -->
  <bean id="ttboxTxManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="ttboxSessionFactory" />
  </bean>



  <tx:annotation-driven transaction-manager="ttboxTxManager" proxy-target-class="false" />

  <alias name="ttboxTxManager" alias="transactionManager" />
</beans>


