<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:b="http://www.springframework.org/schema/beans" xmlns:batch="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
  xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:task="http://www.springframework.org/schema/task"
  xsi:schemaLocation="
	       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
           http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">


  <import resource="classpath:/eu/ttbox/batch/techdata/applicationContext.xml" />

  <bean id="completionPolicy" class="org.springframework.batch.repeat.policy.DefaultResultCompletionPolicy" />

  <job id="stockTechdataJob" xmlns="http://www.springframework.org/schema/batch">
    <step id="stockTechdataDownloadStep" next="stockTechdataSortedStep">
      <tasklet>
        <chunk writer="stockSortItemWriter" chunk-completion-policy="completionPolicy">
          <reader>
            <b:bean class="eu.ttbox.batch.techdata.price.list.PriceListFtpItemReader" p:filenamePattern="(?i)StockFile\.txt(\.gz)?"
              p:downloadConnector-ref="techdataProxyCacheFtpConnector" />
          </reader>
        </chunk>
      </tasklet>
    </step>
     <step id="stockTechdataSortedStep" next="stockTechdataImporterStep"> <!-- -->
      <tasklet>
        <chunk writer="stockSortItemWriter" chunk-completion-policy="completionPolicy">
          <reader>
            <b:bean class="eu.ttbox.batch.core.reader.LocalFilenamePatternProxyCacheItemReader"
              p:filenamePattern="(?i)StockFile\.txt(\.gz)?" p:downloadConnector-ref="techdataProxyCacheFtpConnector" />
          </reader>
        </chunk>
      </tasklet>
    </step>
      
    <step id="stockTechdataImporterStep">
      <tasklet>
        <chunk reader="stockTechdataDifferentialItemReader" processor="stockTechdataItemProcessor" writer="ttboxDifferentialItemWriter" chunk-completion-policy="completionPolicy" />
      </tasklet>
    </step>
  </job>


  <util:constant id="DELIMITER_TAB" static-field="org.springframework.batch.item.file.transform.DelimitedLineTokenizer.DELIMITER_TAB" />

  <util:constant id="stockTechdataFields"    static-field="eu.ttbox.batch.techdata.stock.StockFieldEnum.FIELDS_NAMES" />
  <util:constant id="stockTechdataFieldIds"    static-field="eu.ttbox.batch.techdata.stock.StockFieldEnum.FIELDS_IDS" />
  <util:constant id="stockTechdataFieldsAddAll"    static-field="eu.ttbox.batch.techdata.stock.StockFieldEnum.FIELDS_NAMES_ADD_ALL" />

  <bean id="stockTechdataDifferentialItemReader" class="eu.ttbox.batch.core.reader.differential.DifferentialItemReader"
    p:comparator-ref="stockTechdataItemComparator" >
    <property name="itemReaderMaster">
      <bean class="org.springframework.batch.item.database.HibernateCursorItemReader" 
      p:sessionFactory-ref="ttboxSessionFactory"
      p:queryString="select s from SupplierStock s inner join fetch s.product p where s.type='TECHDATA' order by p.extIds.techId" />
    </property> 
    <property name="itemReaderJoin">
      <bean class="eu.ttbox.batch.core.reader.ProxyCacheDelegateItemReader" p:online="false" p:relativePath="stockfile-sorted.txt.gz"
        p:delegate-ref="stockTechdataFlatFileItemReader">
        <property name="downloadConnector">
          <bean parent="techdataProxyCacheFtpConnector" />
        </property>
      </bean>
    </property>
        
  </bean>

<!--   <bean id="stockTechdataItemReader" class="eu.ttbox.batch.core.reader.ProxyCacheDelegateItemReader"  -->
<!--     p:relativePath="stockfile-sorted.txt.gz"  p:delegate-ref="stockTechdataFlatFileItemReader"> -->
<!--    <property name="downloadConnector"> -->
<!--       <bean parent="techdataProxyCacheFtpConnector"  /> -->
<!--     </property>  -->
<!--   </bean> -->

      <bean id="stockTechdataFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="lineMapper">
          <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
            <property name="lineTokenizer">
              <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer" p:delimiter-ref="DELIMITER_TAB"
                p:quoteCharacter="\u0000" p:names-ref="stockTechdataFields" />
            </property>
            <property name="fieldSetMapper">
              <bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
            </property>
          </bean>
        </property>
      </bean>
      
  <bean id="stockSortItemWriter" class="eu.ttbox.batch.techdata.core.sort.SortFileService">
    <property name="itemReader">
      <bean class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="lineMapper">
          <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
            <property name="lineTokenizer">
              <bean class="eu.ttbox.batch.techdata.core.sort.reader.AddUntokeniseLineDelimitedLineTokenizer"
                p:delimiter-ref="DELIMITER_TAB" p:quoteCharacter="\u0000"
                p:names-ref="stockTechdataFieldsAddAll" />
            </property>
            <property name="fieldSetMapper">
              <bean class="eu.ttbox.batch.techdata.core.sort.reader.SortVOFieldSetMapper" p:line="ALL" p:keys-ref="stockTechdataFieldIds" />
            </property>
          </bean>
        </property>
      </bean>
    </property>
  </bean>


</beans>